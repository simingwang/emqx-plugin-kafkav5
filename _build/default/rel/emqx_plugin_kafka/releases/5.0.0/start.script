%% coding: utf-8
{script,
    {"emqx_plugin_kafka","5.0.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-8.3/ebin","$ROOT/lib/stdlib-3.17.1/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-8.3/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_erts_errors,
          erl_kernel_errors,erl_reply,erl_signal_handler,erpc,erts_debug,
          gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,global,
          global_group,global_search,group,group_history,inet,inet6_sctp,
          inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net,net_adm,net_kernel,os,pg,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,rpc,seq_trace,socket,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.17.1/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_stdlib_errors,erl_tar,error_logger_file_h,error_logger_tty_h,
          escript,eval_bits,file_sorter,filelib,gb_sets,gb_trees,gen_fsm,
          gen_statem,io,io_lib,io_lib_format,io_lib_format_ryu_table,
          io_lib_fread,io_lib_pretty,log_mf_h,maps,math,ms_transform,orddict,
          ordsets,otp_internal,pool,proplists,qlc,qlc_pt,queue,rand,random,re,
          sets,shell,shell_default,shell_docs,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/map_sets-1.1.0/ebin"]},
     {primLoad,[map_sets]},
     {path,["$ROOT/lib/emqx_plugin_kafka-5.0.0/ebin"]},
     {primLoad,
         [emqx_cli_demo,emqx_plugin_kafka,emqx_plugin_kafka_app,
          emqx_plugin_kafka_schema,emqx_plugin_kafka_sup]},
     {path,["$ROOT/lib/crc32cer-0.1.8/ebin"]},
     {primLoad,[crc32cer]},
     {path,["$ROOT/lib/crypto-5.0.6/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/asn1-5.0.18/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.12/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-10.7/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_client_session_cache_db,ssl_config,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,
          ssl_dist_admin_sup,ssl_dist_connection_sup,ssl_dist_sup,
          ssl_gen_statem,ssl_handshake,ssl_listen_tracker_sup,ssl_logger,
          ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_record,
          ssl_server_session_cache,ssl_server_session_cache_db,
          ssl_server_session_cache_sup,ssl_session,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_upgrade_server_session_cache_sup,
          tls_bloom_filter,tls_client_ticket_store,tls_connection,
          tls_connection_1_3,tls_connection_sup,tls_dist_server_sup,
          tls_dist_sup,tls_dtls_connection,tls_dyn_connection_sup,
          tls_gen_connection,tls_handshake,tls_handshake_1_3,tls_record,
          tls_record_1_3,tls_sender,tls_server_session_ticket,
          tls_server_session_ticket_sup,tls_server_sup,tls_socket,tls_sup,
          tls_v1]},
     {path,["$ROOT/lib/kafka_protocol-4.0.3/ebin"]},
     {primLoad,
         [kpro,kpro_api_vsn,kpro_app,kpro_auth_backend,kpro_batch,
          kpro_batch_v01,kpro_brokers,kpro_compress,kpro_connection,
          kpro_consumer_group,kpro_lib,kpro_prelude_schema,kpro_req_lib,
          kpro_rsp_lib,kpro_sasl,kpro_schema,kpro_schema_11,kpro_scram,
          kpro_sent_reqs,kpro_txn_lib,kpro_varint]},
     {path,["$ROOT/lib/snappyer-1.2.8/ebin"]},
     {primLoad,[snappyer]},
     {path,["$ROOT/lib/supervisor3-1.1.11/ebin"]},
     {primLoad,[supervisor3]},
     {path,["$ROOT/lib/brod-3.16.3/ebin"]},
     {primLoad,
         [brod,brod_cg_commits,brod_cli,brod_cli_pipe,brod_client,
          brod_consumer,brod_consumers_sup,brod_group_coordinator,
          brod_group_member,brod_group_subscriber,brod_group_subscriber_v2,
          brod_group_subscriber_worker,brod_kafka_apis,brod_kafka_request,
          brod_producer,brod_producer_buffer,brod_producers_sup,brod_sup,
          brod_topic_subscriber,brod_topic_subscriber_cb_fun,brod_utils]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-8.3/ebin","$ROOT/lib/stdlib-3.17.1/ebin",
          "$ROOT/lib/map_sets-1.1.0/ebin",
          "$ROOT/lib/emqx_plugin_kafka-5.0.0/ebin",
          "$ROOT/lib/crc32cer-0.1.8/ebin","$ROOT/lib/crypto-5.0.6/ebin",
          "$ROOT/lib/asn1-5.0.18/ebin","$ROOT/lib/public_key-1.12/ebin",
          "$ROOT/lib/ssl-10.7/ebin","$ROOT/lib/kafka_protocol-4.0.3/ebin",
          "$ROOT/lib/snappyer-1.2.8/ebin","$ROOT/lib/supervisor3-1.1.11/ebin",
          "$ROOT/lib/brod-3.16.3/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_erts_errors,erl_reply,erl_kernel_errors,
                        erl_signal_handler,erpc,error_handler,error_logger,
                        file,file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg,pg2,raw_file_io,
                        raw_file_io_compressed,raw_file_io_deflate,
                        raw_file_io_delayed,raw_file_io_inflate,
                        raw_file_io_list,seq_trace,socket,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg]},
                   {applications,[]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {net_tickintensity,4},
                        {net_ticktime,60},
                        {prevent_overlapping_partitions,false},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.17.1"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_stdlib_errors,erl_tar,error_logger_file_h,
                        error_logger_tty_h,escript,ets,file_sorter,filelib,
                        filename,gb_trees,gb_sets,gen,gen_event,gen_fsm,
                        gen_server,gen_statem,io,io_lib,io_lib_format,
                        io_lib_format_ryu_table,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,shell_docs,
                        slave,sofs,string,supervisor,supervisor_bridge,sys,
                        timer,unicode,unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,map_sets,
                  [{description,"sets-like wrapper based on maps"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,[map_sets]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_plugin_kafka,
                  [{description,"EMQX Plugin -kafka-with brod"},
                   {vsn,"5.0.0"},
                   {id,[]},
                   {modules,
                       [emqx_cli_demo,emqx_plugin_kafka,emqx_plugin_kafka_app,
                        emqx_plugin_kafka_schema,emqx_plugin_kafka_sup]},
                   {registered,[emqx_plugin_kafka_sup]},
                   {applications,[map_sets,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_plugin_kafka_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crc32cer,
                  [{description,"CRC32-C as nif for Erlang"},
                   {vsn,"0.1.8"},
                   {id,[]},
                   {modules,[crc32cer]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"5.0.6"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.18"},
                   {vsn,"5.0.18"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.12"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        pubkey_ocsp,'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto,asn1]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"10.7"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,
                        tls_dyn_connection_sup,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_gen_connection,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,
                        dtls_server_sup,dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_client_session_cache_db,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,kafka_protocol,
                  [{description,"Kafka protocol library for Erlang/Elixir"},
                   {vsn,"4.0.3"},
                   {id,[]},
                   {modules,
                       [kpro,kpro_api_vsn,kpro_app,kpro_auth_backend,
                        kpro_batch,kpro_batch_v01,kpro_brokers,kpro_compress,
                        kpro_connection,kpro_consumer_group,kpro_lib,
                        kpro_prelude_schema,kpro_req_lib,kpro_rsp_lib,
                        kpro_sasl,kpro_schema,kpro_schema_11,kpro_scram,
                        kpro_sent_reqs,kpro_txn_lib,kpro_varint]},
                   {registered,[]},
                   {applications,[crc32cer,kernel,stdlib,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kpro_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,snappyer,
                  [{description,"Snappy as nif for Erlang"},
                   {vsn,"1.2.8"},
                   {id,[]},
                   {modules,[snappyer]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,supervisor3,
                  [{description,
                       "A copy of supervisor.erl from the R16B Erlang/OTP with modifications"},
                   {vsn,"1.1.11"},
                   {id,[]},
                   {modules,[supervisor3]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,brod,
                  [{description,"Apache Kafka Erlang client library"},
                   {vsn,"3.16.3"},
                   {id,[]},
                   {modules,
                       [brod,brod_cg_commits,brod_cli,brod_cli_pipe,
                        brod_client,brod_consumer,brod_consumers_sup,
                        brod_group_coordinator,brod_group_member,
                        brod_group_subscriber,brod_group_subscriber_v2,
                        brod_group_subscriber_worker,brod_kafka_apis,
                        brod_kafka_request,brod_producer,brod_producer_buffer,
                        brod_producers_sup,brod_sup,brod_topic_subscriber,
                        brod_topic_subscriber_cb_fun,brod_utils]},
                   {registered,[]},
                   {applications,
                       [kafka_protocol,snappyer,kernel,stdlib,supervisor3]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{brod,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[map_sets,permanent]}},
     {apply,{application,start_boot,[emqx_plugin_kafka,permanent]}},
     {apply,{application,start_boot,[crc32cer,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[kafka_protocol,permanent]}},
     {apply,{application,start_boot,[snappyer,permanent]}},
     {apply,{application,start_boot,[supervisor3,permanent]}},
     {apply,{application,start_boot,[brod,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
